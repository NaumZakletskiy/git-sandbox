name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.2.3)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test --passWithNoTests

      - name: Run linting
        run: yarn lint

      - name: Run integration tests (if available)
        run: |
          if yarn run --silent --list 2>/dev/null | grep -q "test:int"; then
            echo "Integration tests found, checking if Docker is available..."
            if command -v docker >/dev/null 2>&1; then
              echo "Docker available, running integration tests..."
              yarn test:int || echo "⚠️ Integration tests failed, but continuing release..."
            else
              echo "⚠️ Docker not available in CI environment, skipping integration tests..."
            fi
          else
            echo "No integration tests configured, skipping..."
          fi
        continue-on-error: true

      - name: Extract tag version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Validate version format
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          if [[ ! $VERSION =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format: $VERSION"
            echo "Expected format: vX.Y.Z (e.g., v1.2.3)"
            exit 1
          fi

      - name: Generate release notes
        id: release_notes
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          if [ -f "scripts/generate-release-notes.js" ]; then
            echo "Generating release notes from CHANGELOG.md..."
            NOTES=$(node scripts/generate-release-notes.js "$VERSION" || echo "Release notes could not be generated from CHANGELOG.md")
          else
            echo "No release notes generator found, creating basic notes..."
            NOTES="## Release $VERSION\n\nSee the [full changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details."
          fi
          
          # Add additional context
          NOTES="$NOTES

**Docker Image**: \`${{ github.repository }}:${VERSION#v}\`
**Git Commit**: \`${{ github.sha }}\`
**Release Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')

---
*This release was automatically created by GitHub Actions*"
          
          echo "NOTES<<EOF" >> $GITHUB_OUTPUT
          echo -e "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.release_notes.outputs.NOTES }}
          draft: false
          prerelease: false
          generate_release_notes: true
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify success
        run: |
          echo "✅ Release ${{ steps.get_version.outputs.VERSION }} created successfully!"
          echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_version.outputs.VERSION }}"